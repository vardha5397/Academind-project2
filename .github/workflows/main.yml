name: Performing github actions

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
        types:
            - opened
            - closed
    workflow_dispatch:
jobs:
    Testjob:
        runs-on: ubuntu-latest
        steps:
            - name: get the code
              uses: actions/checkout@v3
            - name: set the env
              uses: actions/setup-node@v3
              with:
                    node-version: '14'
            - name: Dependency caching
              uses: actions/cache@v3
              with:
                     path: ~/.npm
                     key: ${{ runner.os }}-dep-cache-${{ hashFiles('**/package-lock.json') }}
            - name: Install dependencies
              run: npm ci 
            - name: Perform linting
              run: npm run lint
            - name: Perform Testing
              run: npm run test
            - name: list files
              run: ls ${{ github.workspace }}
            - name: upload the test report
              uses: actions/upload-artifact@v3
              with:
                     name: test-report
                     path: test.json
    Buildjob:
        needs: [Testjob] 
        outputs:
            outputfile: ${{ steps.publsih.outputs.outputfile}}
        runs-on: ubuntu-latest
        steps:
            - name: get the code
              uses: actions/checkout@v3
            - name: Intsall dependencies
              run: npm ci
            - name: Building
              run: npm run build
            - name: using output file
              id: publsih
              run: find dist/assests/*.js -type f -execdir echo '::set-output name={outputfile}::{}' ';'
            - name: list the files
              run: ls ${{ github.workspace }}
            - name: uploadartifact
              uses: actions/upload-artifact@v3
              with:
                    name: distfiles
                    path: dist
    DownloadArtifact:
           needs: [Buildjob]
           runs-on: ubuntu-latest
           steps:
                 - name: download the artifact
                   uses: actions/download-artifact@v3
                   with:
                       name: distfiles
                 - name: displaying the output file
                   run: echo " ${{ needs.Buildjob.outputs.outputfile }}"